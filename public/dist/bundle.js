/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Application primary object class.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\nvar dataSource_1 = __webpack_require__(/*! ./dataSource */ \"./src/dataSource.ts\");\r\nvar template_1 = __webpack_require__(/*! ./views/template */ \"./src/views/template.ts\");\r\nvar main_1 = __webpack_require__(/*! ./views/main */ \"./src/views/main.ts\");\r\nvar errorHandler_1 = __webpack_require__(/*! ./errorHandler */ \"./src/errorHandler.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\n/**\r\n * @param stdout HTML root element.\r\n * @param stdin Virtual DOM root component.\r\n * @param DOMObjects Virtual DOM objects iterable array.\r\n * @param state Application primary state container.\r\n * @param renderId\r\n * @param preloaded\r\n */\r\nvar App = /** @class */ (function () {\r\n    function App() {\r\n        var _this = this;\r\n        this.load = function () {\r\n            if (_this.preloaded) {\r\n                setTimeout(function () {\r\n                    _this.dataSource.init().then(function (res) {\r\n                        var data = {};\r\n                        Object.keys(_this.state.data).forEach(function (key) {\r\n                            // @ts-ignore\r\n                            data[key] = res[key] ? res[key] : _this.state.data[key];\r\n                        });\r\n                        _this.setState(__assign(__assign({}, _this.state), { step: 1, loaded: true, \r\n                            // @ts-ignore\r\n                            data: __assign({}, data) }));\r\n                    });\r\n                }, 300);\r\n            }\r\n            else {\r\n                _this.preloaded = true;\r\n            }\r\n        };\r\n        /**\r\n         * Method to update application state container\r\n         * @param state Container\r\n         */\r\n        this.setState = function (state) {\r\n            if (DEBUG) {\r\n                _this.handler.debug(\"Before dispatch >> \");\r\n                _this.handler.debug(_this.state);\r\n                _this.handler.debug(\"Will dispatch >>\");\r\n                _this.handler.debug(state);\r\n            }\r\n            _this.state = __assign(__assign({}, _this.state), state);\r\n            if (DEBUG) {\r\n                _this.handler.debug(\"After dispatch >> \");\r\n                _this.handler.debug(_this.state);\r\n            }\r\n            var tree = function (arr) {\r\n                var flag = false;\r\n                arr.forEach(function (el) {\r\n                    el.getNodes().forEach(function (node) {\r\n                        if (arr.indexOf(node) < 0) {\r\n                            flag = true;\r\n                            arr.push(node);\r\n                        }\r\n                    });\r\n                });\r\n                if (flag) {\r\n                    return tree(arr);\r\n                }\r\n                else {\r\n                    return arr;\r\n                }\r\n            };\r\n            _this.DOMObjects.forEach(function (obj) {\r\n                var before = JSON.stringify(obj.props);\r\n                var after = JSON.stringify(obj.updateProps());\r\n                if (before !== after) {\r\n                    var nodes = tree(_this.stdin.getNodes());\r\n                    if (nodes.indexOf(obj) >= 0 || obj === _this.stdin) {\r\n                        if ((obj.parent && obj.parent.getNodes().indexOf(obj) >= 0) || (obj === _this.stdin)) {\r\n                            obj.render(obj.parent ? obj.parent.element : _this.stdout);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Method to rebuild while Virtual DOM\r\n         */\r\n        this.render = function () {\r\n            try {\r\n                if (DEBUG) {\r\n                    _this.handler.log(\"App.render(\".concat(_this.renderId, \")\"));\r\n                }\r\n                _this.renderId++;\r\n                _this.stdin.updateProps();\r\n                _this.stdin.render(_this.stdout);\r\n            }\r\n            catch (e) {\r\n                _this.handler.error(\"App.render(\".concat(_this.renderId, \") -> \").concat(e.message));\r\n            }\r\n        };\r\n        /**\r\n         * Application state container public interface.\r\n         */\r\n        this.document = {\r\n            getState: function () {\r\n                return _this.state;\r\n            },\r\n            setState: function (state) {\r\n                if (DEBUG) {\r\n                    _this.setState(state);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            this.handler = new errorHandler_1[\"default\"](this);\r\n            if (DEBUG) {\r\n                this.handler.log(\"App.constructor()\");\r\n            }\r\n            this.renderId = 0;\r\n            this.preloaded = false;\r\n            this.DOMObjects = [];\r\n            // @ts-ignore\r\n            this.stdout = document.getElementById(\"typescript-app\");\r\n            this.stdout.innerHTML = template_1[\"default\"];\r\n            this.stdout = this.stdout.getElementsByClassName(\"root\")[0];\r\n            this.dataSource = new dataSource_1[\"default\"](this);\r\n            this.state = {\r\n                data: {\r\n                    image: {\r\n                        selected: \"\",\r\n                        //@ts-ignore\r\n                        options: []\r\n                    },\r\n                    dataType: {\r\n                        selected: \"\",\r\n                        //@ts-ignore\r\n                        options: []\r\n                    }\r\n                },\r\n                step: 1,\r\n                loaded: false,\r\n                frameId: 0\r\n            };\r\n            (0, main_1[\"default\"])(this);\r\n            this.render();\r\n            if (document.readyState === 'complete') {\r\n                this.preloaded = true;\r\n                this.load();\r\n            }\r\n            else {\r\n                setTimeout(this.load, 300);\r\n                window.addEventListener(\"load\", function () { return setTimeout(_this.load, 300); });\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.handler.error(\"App.constructor() -> \".concat(e.message));\r\n        }\r\n    }\r\n    return App;\r\n}());\r\nexports[\"default\"] = App;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/app.ts?");

/***/ }),

/***/ "./src/components/autocomplete.ts":
/*!****************************************!*\
  !*** ./src/components/autocomplete.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Virtual DOM <input><datalist></input> wrapper component.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar element_1 = __webpack_require__(/*! ./element */ \"./src/components/element.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\n/**\r\n * @param app Application object\r\n * @param name Component name.\r\n * @param parent Virtual DOM parent node.\r\n * @param nodes Array with a child nodes.\r\n * @param element\r\n * @param tag Component </>\r\n * @param renderId Render method executions counter (debug tool)\r\n * @param mapStateToProps Function to map object properties from application state container.\r\n */\r\nvar DOMAutoComplete = /** @class */ (function (_super) {\r\n    __extends(DOMAutoComplete, _super);\r\n    function DOMAutoComplete() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    DOMAutoComplete.prototype.parseProps = function () {\r\n        var _this = this;\r\n        if (this.name) {\r\n            this.element.setAttribute(\"name\", this.name);\r\n        }\r\n        if (this.element.childNodes.length) {\r\n            this.element.childNodes.forEach(function (node) {\r\n                node.parentNode.removeChild(node);\r\n            });\r\n        }\r\n        var list = document.createElement(\"datalist\");\r\n        list.id = \"datalist_images\";\r\n        Object.keys(this.props.options).forEach(function (option) {\r\n            var opt = document.createElement(\"option\");\r\n            opt.text = _this.props.options[option];\r\n            list.appendChild(opt);\r\n        });\r\n        this.element.appendChild(list);\r\n        for (var i = 0; i < list.childNodes.length; i++) {\r\n            // @ts-ignore\r\n            if (list.childNodes[i].value === this.props.selected) {\r\n                this.element.selectedIndex = i;\r\n            }\r\n        }\r\n        Object.keys(this.props).forEach(function (key) {\r\n            if (key === \"innerHTML\") {\r\n                _this.element.innerHTML = _this.props[key];\r\n            }\r\n            else if (key === \"className\") {\r\n                _this.element.className = _this.props[key];\r\n            }\r\n            else if (_this.props[key] && key !== \"options\" && key !== 'onChange') {\r\n                _this.element.setAttribute(key, _this.props[key]);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @override\r\n     * @param stdout\r\n     */\r\n    DOMAutoComplete.prototype.render = function (stdout) {\r\n        var _this = this;\r\n        try {\r\n            if (DEBUG && this.name) {\r\n                this.app.handler.log(\"DOMAutoComplete(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \")\"));\r\n            }\r\n            this.renderId++;\r\n            this.parseProps();\r\n            if (!this.loaded) {\r\n                this.loaded = true;\r\n                if (this.props.onChange) {\r\n                    this.element.addEventListener('change', function (e) {\r\n                        e.preventDefault();\r\n                        // @ts-ignore\r\n                        e.target.blur();\r\n                        _this.props.onChange(e);\r\n                    });\r\n                }\r\n            }\r\n            this.renderNodes();\r\n            this.output(stdout);\r\n        }\r\n        catch (e) {\r\n            this.app.handler.error(\"DOMAutoComplete(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \") -> \").concat(e.message));\r\n        }\r\n    };\r\n    ;\r\n    return DOMAutoComplete;\r\n}(element_1[\"default\"]));\r\nexports[\"default\"] = DOMAutoComplete;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/components/autocomplete.ts?");

/***/ }),

/***/ "./src/components/container.ts":
/*!*************************************!*\
  !*** ./src/components/container.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Virtual DOM smart container.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar element_1 = __webpack_require__(/*! ./element */ \"./src/components/element.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\n/**\r\n * @property app Application object\r\n * @property name Component name.\r\n * @property parent Virtual DOM parent node.\r\n * @property nodes Array with a child nodes.\r\n * @property element\r\n * @property tag Component </>\r\n * @property renderId Render method executions counter (debug tool)\r\n * @property mapStateToProps Function to map object properties from application state container.\r\n * @property step Current form step (1/2)\r\n */\r\nvar DOMContainer = /** @class */ (function (_super) {\r\n    __extends(DOMContainer, _super);\r\n    /**\r\n     * @constructor\r\n     * @overrider\r\n     */\r\n    function DOMContainer(application, tag, parent, name, mapStateToProps, defaultProps) {\r\n        if (parent === void 0) { parent = null; }\r\n        var _this = _super.apply(this, arguments) || this;\r\n        _this.childNodes = {};\r\n        _this.loaded = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    DOMContainer.prototype.getNodes = function () {\r\n        var _this = this;\r\n        var nodes = [];\r\n        this.props.views.forEach(function (view) {\r\n            if (view.condition) {\r\n                _this.nodes.forEach(function (node) {\r\n                    if (node.name === view.name) {\r\n                        nodes.push(node);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return nodes;\r\n    };\r\n    DOMContainer.prototype.parseProps = function () {\r\n        var _this = this;\r\n        _super.prototype.parseProps.call(this);\r\n        if (this.props.views && this.props.views.length) {\r\n            var arr_1 = [];\r\n            this.props.views.forEach(function (view) {\r\n                if (view.condition()) {\r\n                    arr_1.push(view);\r\n                }\r\n            });\r\n            var flag = void 0;\r\n            do {\r\n                flag = false;\r\n                var _loop_1 = function (i) {\r\n                    var flag_1 = false;\r\n                    arr_1.forEach(function (el) {\r\n                        if (_this.nodes[i] && el.name === _this.nodes[i].name) {\r\n                            flag_1 = true;\r\n                        }\r\n                    });\r\n                    if (!flag_1) {\r\n                        this_1.removeChild(this_1.nodes[i]);\r\n                        flag_1 = true;\r\n                        return \"break\";\r\n                    }\r\n                };\r\n                var this_1 = this;\r\n                for (var i = this.nodes.length - 1; i >= 0; i--) {\r\n                    var state_1 = _loop_1(i);\r\n                    if (state_1 === \"break\")\r\n                        break;\r\n                }\r\n            } while (flag);\r\n            arr_1.forEach(function (view) {\r\n                if (!_this.childNodes || !_this.childNodes[view.name]) {\r\n                    _this.childNodes[view.name] = view.content(_this.app, _this);\r\n                }\r\n                else {\r\n                    _this.addChild(_this.childNodes[view.name]);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    DOMContainer.prototype.render = function (stdout) {\r\n        try {\r\n            if (DEBUG && this.name) {\r\n                this.app.handler.log(\"DOMElement(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \")\"));\r\n            }\r\n            _super.prototype.render.call(this, stdout);\r\n        }\r\n        catch (e) {\r\n            this.app.handler[\"throw\"](\"DOMContainer(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \") -> \").concat(e.message));\r\n        }\r\n    };\r\n    return DOMContainer;\r\n}(element_1[\"default\"]));\r\nexports[\"default\"] = DOMContainer;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/components/container.ts?");

/***/ }),

/***/ "./src/components/element.ts":
/*!***********************************!*\
  !*** ./src/components/element.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\n/**\r\n * TypeScript Application - Virtual DOM element primary component.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\n/**\r\n * @property app Application object\r\n * @property name Component name.\r\n * @property parent Virtual DOM parent node.\r\n * @property nodes Array with a child nodes.\r\n * @property element\r\n * @property tag Component </>\r\n * @property renderId Render method executions counter (debug tool)\r\n * @property mapStateToProps Function to map object properties from application state container.\r\n */\r\nvar DOMElement = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param app Application object.\r\n     * @param tag Component </>\r\n     * @param parent Virtual DOM parent node.\r\n     * @param name Component name.\r\n     * @param mapStateToProps Function to map object properties from application state container.\r\n     * @param defaultProps Object with a object initial properties.\r\n     */\r\n    function DOMElement(application, tag, parent, name, mapStateToProps, defaultProps) {\r\n        if (parent === void 0) { parent = null; }\r\n        if (DEBUG && name) {\r\n            application.handler.log(\"DOMElement.constructor(<\".concat(tag, \" name=\\\"\").concat(name, \"\\\"/>)\"));\r\n        }\r\n        this.renderId = 0;\r\n        this.name = name ? name : \"\";\r\n        this.tag = tag;\r\n        this.element = document.createElement(tag);\r\n        // @ts-ignore\r\n        this.element.ref = this;\r\n        this.app = application;\r\n        this.parent = parent;\r\n        this.props = {};\r\n        this.defaultProps = defaultProps;\r\n        this.mapStateToProps = mapStateToProps;\r\n        this.nodes = [];\r\n        this.app.DOMObjects.push(this);\r\n        this.updateProps();\r\n    }\r\n    /**\r\n     * Method to return child node list.\r\n     */\r\n    DOMElement.prototype.getNodes = function () {\r\n        return this.nodes;\r\n    };\r\n    /**\r\n     * Method to update component props.\r\n     */\r\n    DOMElement.prototype.updateProps = function () {\r\n        if (this.defaultProps) {\r\n            if (this.mapStateToProps && typeof this.mapStateToProps === \"function\") {\r\n                this.props = __assign(__assign({}, this.defaultProps), this.mapStateToProps(this.app.state));\r\n            }\r\n            else {\r\n                this.props = this.defaultProps;\r\n            }\r\n        }\r\n        else if (this.mapStateToProps && typeof this.mapStateToProps === \"function\") {\r\n            this.props = __assign({}, this.mapStateToProps(this.app.state));\r\n        }\r\n        return this.props;\r\n    };\r\n    /**\r\n     * Method to update child nodes while capturing.\r\n     */\r\n    DOMElement.prototype.renderNodes = function () {\r\n        var _this = this;\r\n        this.nodes.forEach(function (node, index) {\r\n            if (_this.getNodes().indexOf(node) >= 0) {\r\n                _this.updateProps();\r\n                node.render(_this.element);\r\n                if (_this.element.childNodes[index]) {\r\n                    _this.element.childNodes[index].replaceWith(node.element);\r\n                }\r\n            }\r\n            else {\r\n                if (node.element.parentNode) {\r\n                    node.element.parentNode.removeChild(node.element);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Method to output element into DOM.\r\n     * @param stdout Parent Node.\r\n     */\r\n    DOMElement.prototype.output = function (stdout) {\r\n        var _this = this;\r\n        var flag = false;\r\n        if (stdout) {\r\n            stdout.childNodes.forEach(function (node, index) {\r\n                // @ts-ignore\r\n                if (node.ref === _this) {\r\n                    flag = true;\r\n                    stdout.childNodes[index].replaceWith(_this.element);\r\n                }\r\n            });\r\n            if (!flag && !this.element.parentNode) {\r\n                stdout.appendChild(this.element);\r\n            }\r\n        }\r\n    };\r\n    DOMElement.prototype.parseProps = function () {\r\n        var _this = this;\r\n        var fout = this.element;\r\n        Object.keys(this.props).forEach(function (key) {\r\n            if (key === \"innerHTML\") {\r\n                fout.innerHTML = _this.props[key];\r\n            }\r\n            else if (key === \"className\") {\r\n                fout.className = _this.props[key];\r\n            }\r\n            else if (key === \"onClick\") {\r\n                fout.onclick = _this.props[key];\r\n            }\r\n            else if (_this.props[key]) {\r\n                fout.setAttribute(key, _this.props[key]);\r\n            }\r\n        });\r\n        if (this.name) {\r\n            fout.setAttribute(\"name\", this.name);\r\n        }\r\n    };\r\n    /**\r\n     * Method to output html content to parent node.\r\n     * @param stdout HTML Element to output.\r\n     */\r\n    DOMElement.prototype.render = function (stdout) {\r\n        try {\r\n            if (DEBUG && this.name) {\r\n                this.app.handler.log(\"DOMElement(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \")\"));\r\n            }\r\n            this.renderId++;\r\n            this.parseProps();\r\n            this.renderNodes();\r\n            this.output(stdout);\r\n        }\r\n        catch (e) {\r\n            this.app.handler.error(\"DOMElement(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \") -> \").concat(e.message));\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n     * Method to add new node.\r\n     * @param child Target element.\r\n     */\r\n    DOMElement.prototype.addChild = function (child) {\r\n        if (DEBUG && this.name && child.name) {\r\n            this.app.handler.log(\"DOMElement(\".concat(this.name, \").addChild(\").concat(child.name, \")\"));\r\n        }\r\n        this.nodes.push(child);\r\n        if (this.getNodes().indexOf(child) >= 0) {\r\n            this.element.appendChild(child.element);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n     * Method to remove a child node.\r\n     * @param child Target element.\r\n     */\r\n    DOMElement.prototype.removeChild = function (child) {\r\n        if (DEBUG && this.name) {\r\n            this.app.handler.log(\"DOMElement(\".concat(this.name, \").removeChild(\").concat(child.name, \")\"));\r\n        }\r\n        var arr = [];\r\n        this.nodes.forEach(function (node) {\r\n            if (node !== child) {\r\n                arr.push(node);\r\n            }\r\n        });\r\n        this.nodes = arr;\r\n        this.element.removeChild(child.element);\r\n    };\r\n    ;\r\n    return DOMElement;\r\n}());\r\nexports[\"default\"] = DOMElement;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/components/element.ts?");

/***/ }),

/***/ "./src/components/select.ts":
/*!**********************************!*\
  !*** ./src/components/select.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Virtual DOM <select> wrapper component.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nexports[\"default\"] = void 0;\r\nvar element_1 = __webpack_require__(/*! ./element */ \"./src/components/element.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\n/**\r\n * @param app Application object.\r\n * @param tag Component </>\r\n * @param parent Virtual DOM parent node.\r\n * @param name Component name.\r\n * @param mapStateToProps Function to map object properties from application state container.\r\n * @param defaultProps Object with a object initial properties.\r\n */\r\nvar DOMSelect = /** @class */ (function (_super) {\r\n    __extends(DOMSelect, _super);\r\n    function DOMSelect() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    DOMSelect.prototype.parseProps = function () {\r\n        var _this = this;\r\n        var flag = false;\r\n        if (this.element.options && this.element.options.length) {\r\n            for (var i = 0; i < this.element.options.length; i++) {\r\n                this.element.remove(i);\r\n                flag = true;\r\n            }\r\n        }\r\n        var options = this.props.options ? this.props.options : [];\r\n        if (!this.props.selected && this.props.placeholder) {\r\n            var opt = document.createElement(\"option\");\r\n            opt.text = this.props.placeholder;\r\n            opt.selected = true;\r\n            opt.disabled = true;\r\n            this.element.add(opt, null);\r\n        }\r\n        Object.keys(options).forEach(function (option) {\r\n            var opt = document.createElement(\"option\");\r\n            // @ts-ignore\r\n            opt.text = options[option];\r\n            opt.value = option;\r\n            _this.element.add(opt, null);\r\n        });\r\n        if (flag) {\r\n            this.element.remove(0);\r\n        }\r\n        if (this.element.options && this.element.options.length) {\r\n            for (var i = 0; i < this.element.options.length; i++) {\r\n                if (this.element.options[i].value === this.props.selected) {\r\n                    this.element.selectedIndex = i;\r\n                }\r\n            }\r\n        }\r\n        Object.keys(this.props).forEach(function (key) {\r\n            if (key === \"innerHTML\") {\r\n                _this.element.innerHTML = _this.props[key];\r\n            }\r\n            else if (key === \"className\") {\r\n                _this.element.className = _this.props[key];\r\n            }\r\n            else if (_this.props[key] && key !== \"options\" && key !== 'onChange') {\r\n                _this.element.setAttribute(key, _this.props[key]);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @override\r\n     * @param stdout\r\n     */\r\n    DOMSelect.prototype.render = function (stdout) {\r\n        try {\r\n            if (DEBUG && this.name) {\r\n                this.app.handler.log(\"DOMSelect(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \")\"));\r\n            }\r\n            this.renderId++;\r\n            if (!this.loaded) {\r\n                this.element.setAttribute(\"name\", this.name);\r\n                this.element.addEventListener('change', this.props.onChange);\r\n                this.loaded = true;\r\n            }\r\n            var arr = [];\r\n            if (this.element.options && this.element.options.length) {\r\n                for (var i = 1; i < this.element.options.length; i++) {\r\n                    arr.push(this.element.options[i].value);\r\n                }\r\n            }\r\n            if (JSON.stringify(Object.values(this.props.options)) !== JSON.stringify(arr)) {\r\n                this.parseProps();\r\n                this.renderNodes();\r\n                this.output(this.element);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.app.handler.error(\"DOMSelect(<\".concat(this.tag, \" name=\\\"\").concat(this.name, \"\\\"/>).render(\").concat(this.renderId, \") -> \").concat(e.message));\r\n        }\r\n    };\r\n    ;\r\n    return DOMSelect;\r\n}(element_1[\"default\"]));\r\nexports[\"default\"] = DOMSelect;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/components/select.ts?");

/***/ }),

/***/ "./src/dataSource.ts":
/*!***************************!*\
  !*** ./src/dataSource.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n/**\r\n * TypeScript Application - Primary data factory.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nexports.__esModule = true;\r\nvar DataSource = /** @class */ (function () {\r\n    function DataSource(app) {\r\n        this.app = app;\r\n        this.app.handler.log(\"DataSource.constructor()\");\r\n        // @ts-ignore\r\n        this.url = \"MISSING_ENV_VAR\".API_URL;\r\n        this.data = {};\r\n        this.request = \"\";\r\n        this.errorState = 0;\r\n        this.domain = \"\";\r\n        this.requeries = 3;\r\n        // @ts-ignore\r\n        this.timeout = parseInt(\"10\") * 1000;\r\n        // @ts-ignore\r\n        document[\"dataSource\"] = this;\r\n    }\r\n    /**\r\n     * Primary XHR method wrapper.\r\n     * @param url\r\n     * @param method\r\n     * @param body\r\n     * @param func\r\n     * @param strict\r\n     * @param requery\r\n     */\r\n    DataSource.prototype.submitRequest = function (url, method, body, func, strict, requery) {\r\n        var _this = this;\r\n        if (strict === void 0) { strict = true; }\r\n        if (requery === void 0) { requery = true; }\r\n        return new Promise(function (callback) {\r\n            _this.app.handler.log(\"DataSource.submitRequest(\".concat(url, \", \").concat(method, \")\"));\r\n            try {\r\n                var xhr_1 = new XMLHttpRequest();\r\n                if (url.indexOf('http') < 0) {\r\n                    xhr_1.open(method, _this.url + url, true);\r\n                }\r\n                else {\r\n                    xhr_1.open(method, url, true);\r\n                }\r\n                xhr_1.timeout = _this.timeout;\r\n                xhr_1.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n                xhr_1.send(body);\r\n                var flag_1 = false;\r\n                xhr_1.onreadystatechange = function () {\r\n                    if (xhr_1.readyState !== 4) {\r\n                        return false;\r\n                    }\r\n                    if (!flag_1) {\r\n                        flag_1 = true;\r\n                        if (xhr_1.status !== 200 && xhr_1.status !== 400 && xhr_1.status !== 402) {\r\n                            _this.app.handler.error(\"DataSource.submitRequest(url=\" + url + \")\" +\r\n                                \".xhr(status=\" + xhr_1.status + \") -> \" + xhr_1.statusText);\r\n                            if (strict) {\r\n                                _this.app.handler.error(xhr_1.responseText);\r\n                                throw (xhr_1.responseText);\r\n                            }\r\n                            else if (requery && ++_this.errorState < _this.requeries) {\r\n                                _this.submitRequest(url, method, body, func, strict, requery).then(function () { return callback(null); });\r\n                            }\r\n                            else {\r\n                                callback(false);\r\n                            }\r\n                        }\r\n                        else {\r\n                            _this.errorState = 0;\r\n                            callback(xhr_1.responseText);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            catch (e) {\r\n                if (strict) {\r\n                    _this.app.handler.error(\"DataSource.submitRequest(url=\" + url + \") -> \" + e.message);\r\n                    throw (e.message);\r\n                }\r\n                else if (++_this.errorState < _this.requeries) {\r\n                    _this.submitRequest(url, method, body, func).then(function () { return callback(null); });\r\n                }\r\n                else {\r\n                    callback(false);\r\n                }\r\n            }\r\n        }).then(function (xhr) { return func(xhr); });\r\n    };\r\n    /**\r\n     * Init method.\r\n     */\r\n    DataSource.prototype.init = function () {\r\n        var _this = this;\r\n        return new Promise(function (callback) {\r\n            _this.app.handler.log(\"DataSource.init()\");\r\n            try {\r\n                setTimeout(function () {\r\n                    callback({\r\n                        image: {\r\n                            selected: \"\",\r\n                            //@ts-ignore\r\n                            options: [\"Image 1\", \"Image 2\"]\r\n                        },\r\n                        dataType: {\r\n                            selected: \"\",\r\n                            //@ts-ignore\r\n                            options: {\r\n                                1: \"Option 1\",\r\n                                2: \"Option 2\"\r\n                            }\r\n                        }\r\n                    });\r\n                }, 300);\r\n            }\r\n            catch (e) {\r\n                _this.app.handler.error(\"DataSource.ping() -> \" + e.message);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Ping method.\r\n     */\r\n    DataSource.prototype.ping = function () {\r\n        var _this = this;\r\n        return new Promise(function (callback) {\r\n            _this.app.handler.log(\"DataSource.ping()\");\r\n            try {\r\n                _this.submitRequest(\"ping\", \"GET\", null, function (response) {\r\n                    var data = JSON.parse(response);\r\n                    if (data && data.payLoad) {\r\n                        callback(data.payLoad);\r\n                    }\r\n                    else {\r\n                        callback(false);\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                _this.app.handler.error(\"DataSource.ping() -> \" + e.message);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * POST Method.\r\n     * @param id\r\n     */\r\n    DataSource.prototype.post = function (id) {\r\n        var _this = this;\r\n        return new Promise(function (callback) {\r\n            _this.app.handler.log(\"DataSource.post(\".concat(id, \")\"));\r\n            try {\r\n                var data = { id: id };\r\n                _this.submitRequest(\"share\", \"POST\", JSON.stringify(data), function (response) {\r\n                    var data = JSON.parse(response);\r\n                    if (data && data.payLoad) {\r\n                        callback(data.payLoad);\r\n                    }\r\n                    else {\r\n                        callback(false);\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                _this.app.handler.error(\"DataSource.post() -> \" + e.message);\r\n            }\r\n        });\r\n    };\r\n    DataSource.prototype.submitTraceStack = function (text) {\r\n        var _this = this;\r\n        return new Promise(function (callback) {\r\n            _this.app.handler.log(\"DataSource.submitTraceStack()\");\r\n            try {\r\n                var appData = Promise.resolve().then(function () { return __webpack_require__(/*! ../package.json */ \"./package.json\"); });\r\n                // @ts-ignore\r\n                _this.submitRequest(\"https://localhost:8443\", \"POST\", JSON.stringify({\r\n                    agent: navigator.userAgent,\r\n                    // @ts-ignore\r\n                    app: \"typescript-app\",\r\n                    // @ts-ignore\r\n                    version: appData.version,\r\n                    url: window.location.toString(),\r\n                    text: text\r\n                }), function (response) {\r\n                    var data = JSON.parse(response);\r\n                    return data ? true : false;\r\n                });\r\n            }\r\n            catch (e) {\r\n                _this.app.handler.error(\"DataSource.submitTraceStack() -> \" + e.message);\r\n            }\r\n        });\r\n    };\r\n    return DataSource;\r\n}());\r\nexports[\"default\"] = DataSource;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/dataSource.ts?");

/***/ }),

/***/ "./src/errorHandler.ts":
/*!*****************************!*\
  !*** ./src/errorHandler.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n/**\r\n * TypeScript Application - Error handler\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nexports.__esModule = true;\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\nvar ErrorHandler = /** @class */ (function () {\r\n    function ErrorHandler(app) {\r\n        this.app = app;\r\n        this.errorState = false;\r\n        this.traceStack = [];\r\n    }\r\n    ErrorHandler.prototype.log = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" log \").concat(text));\r\n        if (DEBUG) {\r\n            console.log(text);\r\n        }\r\n    };\r\n    ErrorHandler.prototype.info = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" info \").concat(text));\r\n        if (DEBUG) {\r\n            console.info(text);\r\n        }\r\n    };\r\n    ErrorHandler.prototype.warn = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" warn \").concat(text));\r\n        if (DEBUG) {\r\n            console.warn(text);\r\n        }\r\n    };\r\n    ErrorHandler.prototype.debug = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" debug \").concat(text));\r\n        if (DEBUG) {\r\n            console.debug(text);\r\n        }\r\n    };\r\n    ErrorHandler.prototype.error = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" error \").concat(text));\r\n        if (DEBUG) {\r\n            console.error(text);\r\n        }\r\n    };\r\n    ErrorHandler.prototype[\"throw\"] = function (text) {\r\n        // @ts-ignore\r\n        text = \"\".concat(\"TS\", \".\").concat(typeof (text) === \"string\" ? text : JSON.stringify(text));\r\n        this.traceStack.push(\"\".concat(new Date().toLocaleString(), \" throw \").concat(text));\r\n        if (DEBUG) {\r\n            console.error(text);\r\n        }\r\n        this.bsod();\r\n        this.submit();\r\n    };\r\n    ErrorHandler.prototype.bsod = function () {\r\n        var target = this.app.stdout;\r\n        target.style.position = \"fixed\";\r\n        target.style.top = \"0px\";\r\n        target.style.left = \"0px\";\r\n        target.style.right = \"0px\";\r\n        target.style.bottom = \"0px\";\r\n        target.style.display = \"block\";\r\n        target.style.opacity = \"1\";\r\n        // @ts-ignore\r\n        target.innerHTML = \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435 \".concat(\"TS\", \" \\u0431\\u044B\\u043B\\u043E \\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u043E \\u0438\\u0437-\\u0437\\u0430 \\u043D\\u0435\\u043F\\u0440\\u0435\\u0434\\u0432\\u0438\\u0434\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0438\\u0441\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u044F\");\r\n        target.style.backgroundPosition = \"center center\";\r\n        target.style.backgroundSize = \"cover\";\r\n    };\r\n    ErrorHandler.prototype.submit = function () {\r\n        var _this = this;\r\n        return new Promise(function (callback) {\r\n            if (!_this.errorState) {\r\n                _this.errorState = true;\r\n                var fout_1 = \"\";\r\n                if (_this.traceStack.length <= 200) {\r\n                    _this.traceStack.forEach(function (item) {\r\n                        fout_1 += item.toString().substring(0, 1000) + \"<br/>\";\r\n                    });\r\n                }\r\n                else {\r\n                    for (var i = 0; i < 100; i++) {\r\n                        fout_1 += _this.traceStack[i].toString().substring(0, 1000) + \"<br/>\";\r\n                    }\r\n                    fout_1 += \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0449\\u0435\\u043D\\u043E \".concat(_this.traceStack.length - 200, \" \\u0441\\u0442\\u0440\\u043E\\u043A<br/><hr/><br/>\");\r\n                    for (var i = _this.traceStack.length - 100; i < _this.traceStack.length - 1; i++) {\r\n                        fout_1 += _this.traceStack[i].toString().substring(0, 1000) + \"<br/>\";\r\n                    }\r\n                }\r\n                _this.app.dataSource.submitTraceStack(fout_1).then(function (res) {\r\n                    callback(res);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ErrorHandler;\r\n}());\r\nexports[\"default\"] = ErrorHandler;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/errorHandler.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n/**\r\n * TypeScript Application - Application index.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nexports.__esModule = true;\r\nvar app_1 = __webpack_require__(/*! ./app */ \"./src/app.ts\");\r\nnew app_1[\"default\"]();\r\n\n\n//# sourceURL=webpack://typescript-application/./src/index.ts?");

/***/ }),

/***/ "./src/views/main.ts":
/*!***************************!*\
  !*** ./src/views/main.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n/**\r\n * TypeScript Application - Secondary view factory function.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nexports.__esModule = true;\r\nvar container_1 = __webpack_require__(/*! ../components/container */ \"./src/components/container.ts\");\r\nvar element_1 = __webpack_require__(/*! ../components/element */ \"./src/components/element.ts\");\r\nvar step1_1 = __webpack_require__(/*! ./step1 */ \"./src/views/step1.ts\");\r\nvar step2_1 = __webpack_require__(/*! ./step2 */ \"./src/views/step2.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\nvar MainView = function (app) {\r\n    try {\r\n        if (DEBUG) {\r\n            app.handler.log(\"App.MainView()\");\r\n        }\r\n        app.stdin = new element_1[\"default\"](app, \"div\", null, \"\", function (state) { return ({\r\n            loaded: state.loaded\r\n        }); });\r\n        app.stdin.addChild(new element_1[\"default\"](app, \"h1\", app.stdin, \"\", null, {\r\n            className: \"title\",\r\n            innerHTML: \"TypeScript Application\"\r\n        }));\r\n        app.stdin.addChild(new container_1[\"default\"](app, 'div', app.stdin, 'container', function (state) {\r\n            return {\r\n                views: [\r\n                    { name: \"Step1View\", condition: function () { return (state.step === 1); }, content: step1_1[\"default\"] },\r\n                    { name: \"Step2View\", condition: function () { return (state.step === 2); }, content: step2_1[\"default\"] },\r\n                ],\r\n                step: state.step\r\n            };\r\n        }, {}));\r\n    }\r\n    catch (e) {\r\n        app.handler.error(\"App.MainView() -> \".concat(e.message));\r\n    }\r\n};\r\nexports[\"default\"] = MainView;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/views/main.ts?");

/***/ }),

/***/ "./src/views/step1.ts":
/*!****************************!*\
  !*** ./src/views/step1.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Secondary view factory function.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar element_1 = __webpack_require__(/*! ../components/element */ \"./src/components/element.ts\");\r\nvar autocomplete_1 = __webpack_require__(/*! ../components/autocomplete */ \"./src/components/autocomplete.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\nvar Step1View = function (app, parent) {\r\n    try {\r\n        if (DEBUG) {\r\n            app.handler.log(\"App.Step1View()\");\r\n        }\r\n        var fout = new element_1[\"default\"](app, \"div\", parent, \"Step1View\", null, {});\r\n        parent.addChild(fout);\r\n        fout.addChild(new element_1[\"default\"](app, \"label\", fout, '', null, {\r\n            innerHTML: \"Image\"\r\n        }));\r\n        fout.addChild(new element_1[\"default\"](app, \"br\", fout));\r\n        fout.addChild(new autocomplete_1[\"default\"](app, 'input', fout, \"image\", function (state) {\r\n            return {\r\n                options: state.data.image.options,\r\n                selected: state.data.image.selected\r\n            };\r\n        }, {\r\n            type: \"text\",\r\n            list: \"datalist_images\",\r\n            placeholder: \"Select image\",\r\n            onChange: function (event) {\r\n                app.setState(__assign(__assign({}, app.state), { data: __assign(__assign({}, app.state.data), { image: __assign(__assign({}, app.state.data.image), { \r\n                            //@ts-ignore\r\n                            selected: event.target.value }) }) }));\r\n            }\r\n        }));\r\n        fout.addChild(new element_1[\"default\"](app, \"br\", fout));\r\n        fout.addChild(new element_1[\"default\"](app, \"input\", fout, '', null, {\r\n            type: 'button',\r\n            value: \"Next\",\r\n            onClick: function () {\r\n                var flag = true;\r\n                if (!app.state.data.image.selected) {\r\n                    flag = false;\r\n                }\r\n                if (flag) {\r\n                    app.setState(__assign(__assign({}, app.state), { step: 2 }));\r\n                }\r\n                else {\r\n                    window.alert('Value required');\r\n                }\r\n            }\r\n        }));\r\n        return fout;\r\n    }\r\n    catch (e) {\r\n        app.handler.error(\"App.Step1View() -> \".concat(e.message));\r\n    }\r\n};\r\nexports[\"default\"] = Step1View;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/views/step1.ts?");

/***/ }),

/***/ "./src/views/step2.ts":
/*!****************************!*\
  !*** ./src/views/step2.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\n/**\r\n * TypeScript Application - Secondary view factory function.\r\n *\r\n * 1.0.1 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar element_1 = __webpack_require__(/*! ../components/element */ \"./src/components/element.ts\");\r\nvar select_1 = __webpack_require__(/*! ../components/select */ \"./src/components/select.ts\");\r\n// @ts-ignore\r\nvar DEBUG =  true && \"true\" == \"true\";\r\nvar Step2View = function (app, parent) {\r\n    try {\r\n        if (DEBUG) {\r\n            app.handler.log(\"App.Step2View()\");\r\n        }\r\n        var fout = new element_1[\"default\"](app, \"div\", parent, \"Step2View\", null, {});\r\n        parent.addChild(fout);\r\n        fout.addChild(new element_1[\"default\"](app, \"label\", fout, '', null, {\r\n            innerHTML: \"Data type\"\r\n        }));\r\n        fout.addChild(new element_1[\"default\"](app, \"br\", fout));\r\n        fout.addChild(new select_1[\"default\"](app, 'select', fout, \"datatype\", function (state) {\r\n            return {\r\n                options: state.data.dataType.options,\r\n                selected: state.data.dataType.selected\r\n            };\r\n        }, {\r\n            required: \"true\",\r\n            placeholder: \"Select data type\",\r\n            onChange: function (event) {\r\n                app.setState(__assign(__assign({}, app.state), { data: __assign(__assign({}, app.state.data), { dataType: __assign(__assign({}, app.state.data.dataType), { \r\n                            //@ts-ignore\r\n                            selected: event.target.value }) }) }));\r\n            }\r\n        }));\r\n        fout.addChild(new element_1[\"default\"](app, \"br\", fout));\r\n        fout.addChild(new element_1[\"default\"](app, \"input\", fout, '', null, {\r\n            type: 'button',\r\n            value: \"Back\",\r\n            onClick: function () {\r\n                app.setState(__assign(__assign({}, app.state), { step: 1 }));\r\n            }\r\n        }));\r\n        fout.addChild(new element_1[\"default\"](app, \"input\", fout, \"submit\", function (state) { return ({\r\n            data: state.data\r\n        }); }, {\r\n            value: \"Next\",\r\n            type: \"submit\",\r\n            onClick: function (e) {\r\n                // @ts-ignore\r\n                app.handler.error(e.target.ref.props.data);\r\n            }\r\n        }));\r\n        return fout;\r\n    }\r\n    catch (e) {\r\n        app.handler.error(\"App.Step2View() -> \".concat(e.message));\r\n    }\r\n};\r\nexports[\"default\"] = Step2View;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/views/step2.ts?");

/***/ }),

/***/ "./src/views/template.ts":
/*!*******************************!*\
  !*** ./src/views/template.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n/**\r\n * TypeScript Application - Secondary view factory function.\r\n *\r\n * 1.0.0 # Aleksandr Vorkunov <developing@nodes-tech.ru>\r\n */\r\nexports.__esModule = true;\r\nvar Template = \"<div class=\\\"root\\\" />\";\r\nexports[\"default\"] = Template;\r\n\n\n//# sourceURL=webpack://typescript-application/./src/views/template.ts?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"name\":\"typescript-application\",\"version\":\"1.0.1\",\"devDependencies\":{\"@types/node\":\"^17.0.45\",\"@types/webpack-dev-server\":\"^4.7.2\",\"dotenv-webpack\":\"^7.1.0\",\"ts-loader\":\"^9.2.8\",\"typescript\":\"^4.9.5\",\"webpack\":\"^5.72.0\",\"webpack-cli\":\"^4.10.0\"},\"scripts\":{\"start\":\"webpack --watch --mode development\",\"build\":\"webpack --mode production\"}}');\n\n//# sourceURL=webpack://typescript-application/./package.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;